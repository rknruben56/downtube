// Code generated by MockGen. DO NOT EDIT.
// Source: transcode/interface.go

// Package mock_transcode is a generated GoMock package.
package mock_transcode

import (
	bytes "bytes"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTranscoder is a mock of Transcoder interface.
type MockTranscoder struct {
	ctrl     *gomock.Controller
	recorder *MockTranscoderMockRecorder
}

// MockTranscoderMockRecorder is the mock recorder for MockTranscoder.
type MockTranscoderMockRecorder struct {
	mock *MockTranscoder
}

// NewMockTranscoder creates a new mock instance.
func NewMockTranscoder(ctrl *gomock.Controller) *MockTranscoder {
	mock := &MockTranscoder{ctrl: ctrl}
	mock.recorder = &MockTranscoderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTranscoder) EXPECT() *MockTranscoderMockRecorder {
	return m.recorder
}

// Transcode mocks base method.
func (m *MockTranscoder) Transcode(buffer *bytes.Buffer) (*bytes.Buffer, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Transcode", buffer)
	ret0, _ := ret[0].(*bytes.Buffer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Transcode indicates an expected call of Transcode.
func (mr *MockTranscoderMockRecorder) Transcode(buffer interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Transcode", reflect.TypeOf((*MockTranscoder)(nil).Transcode), buffer)
}
